
BES.ServerAdministrator=admin.email.address@your.domain.name

#-----------------------------------------------------------------------#
# User and Group to run the BES as					#
#-----------------------------------------------------------------------#
BES.User=user_name
BES.Group=group_name

#-----------------------------------------------------------------------#
# Where we log the stuff...and how much we log                          #
#-----------------------------------------------------------------------#
BES.LogName=./bes.log
BES.LogVerbose=yes

#-----------------------------------------------------------------------#
# modules to load, includes data modules and command modules            #
#-----------------------------------------------------------------------#

BES.modules=dap,cmd,ascii,sql
BES.module.dap=@beslibdir@/libdap_module.so
BES.module.cmd=@beslibdir@/libdap_xml_module.so
BES.module.ascii=@beslibdir@/libascii_module.so
BES.module.sql=@abs_top_builddir@/.libs/libsql_module.so

BES.modules+=odbc
BES.module.odbc=@abs_top_builddir@/.libs/libodbc_module.so

#-----------------------------------------------------------------------#
# Setting the data location
#-----------------------------------------------------------------------#

BES.Catalog.default.RootDirectory=@abs_top_srcdir@
BES.Data.RootDirectory=/dev/null

BES.Catalog.default.TypeMatch+=sql:.*\.(SQL|sql)$;

BES.Catalog.default.Include=;
BES.Catalog.default.Exclude=^\..*;

BES.FollowSymLinks=No
BES.Catalog.default.FollowSymLinks=No

BES.ServerPort=10022

#-----------------------------------------------------------------------#
# Security information for this server. ServerSecure specifies whether  #
# the server is secure or not and requires authentication of the client #
# using SSL certificates and keys. The default secure connection port   #
# is 10003. Then specify the full path to the certificate and key files.#
# An initialization file can be created for both the client and server  #
# side.                                                                 #
#-----------------------------------------------------------------------#
BES.ServerSecure=no
BES.ServerSecurePort=10003
BES.ServerCertFile=/full/path/to/serverside/certificate/file.pem
BES.ServerKeyFile=/full/path/to/serverside/key/file.pem
BES.ClientCertFile=/full/path/to/clientside/certificate/file.pem
BES.ClientKeyFile=/full/path/to/clientside/key/file.pem

#-----------------------------------------------------------------------#
# help file locations, for text, html, and xml versions                 #
#-----------------------------------------------------------------------#
BES.Help.TXT=@pkgdatadir@/bes_help.txt
BES.Help.HTML=@pkgdatadir@/bes_help.html
BES.Help.XML=@pkgdatadir@/bes_help.txt

DAP.Help.TXT=@pkgdatadir@/dap_help.txt
DAP.Help.HTML=@pkgdatadir@/dap_help.html
DAP.Help.XML=@pkgdatadir@/dap_help.txt

#-----------------------------------------------------------------------#
# Should informational response objects be buffered, or streamed        #
# Should informational objects be formatted as text, html, or xml       #
#-----------------------------------------------------------------------#
BES.Info.Buffered=no
BES.Info.Type=xml

#-----------------------------------------------------------------------#
# Cache and compression configuration                                   #
#                                                                       #
# If a data file is compressed the BES will attempt to uncompress it.   #
#                                                                       #
#-----------------------------------------------------------------------#

# Currently the bz2 and gz file compression methods are understood by the
# BES. We will add support for Z (Unix compress) if there's demand for it.

# All of the following five parameters must be set in this file.

# BES.CacheDir: Where should the result of decompressing a file be stored?
# We've set the value to '/tmp' but you might want to change that to
# /tmp/bes, /var/cache/bes, et c., depending on the server-host's
# organization.

# BES.CachePrefix: Prefix for the name of the file used to store the result
# of decompression.

# BES.CacheSize: Size of the cache in megabytes. When the size of the cached
# files exceeds this value, the cache will be purged using a
# last-accessed-first-removed approach. Because it's usually impossible to
# determine the sizes of data files before decompressing them, there may be
# times when the cache holds more data than this value. Ideally this value
# should be several times the size of the largest file you plan to serve. 

# BES.Uncompress.Retry: When waiting for the cache lock, how long should the
# BES wait before trying to get the lock again if previous attempts have
# failed? 

# BES.Uncompress.NumTries: How many times should the BES try to acquire the
# lock before it signals an error?

# The BES cache directory is locked to prevent the different beslistener
# processes from simultaneously removing files and leaving the cache in an
# inconsistent state. Use the Retry and NumTries parameters to tune this
# behavior. Generally, NumTries should be set to about 10. The units of Retry
# are microseconds. To tune the NumTries and Retry, use the formula Retry =
# (0.2s/Average_file_sizeMB)/NumTries. So if your average file size is 10MB
# and you've settled on a NumTries of 10, (0.2s/10MB)/10 = 0.002s or 2000
# microseconds. If you have really large files (e.g., decompressed they are
# 500MB), try setting NumTries to 100.

BES.CacheDir=/tmp
BES.CachePrefix=bes_cache
BES.CacheSize=500

#-----------------------------------------------------------------------#
# If the symbolic name cannot be found in persistence, nice means simply#
# log an error, strict means throw an exception                         #
#-----------------------------------------------------------------------#
BES.Container.Persistence=strict

#-----------------------------------------------------------------------#
# Defines size of system global memory pool                             #
#-----------------------------------------------------------------------#
BES.Memory.GlobalArea.EmergencyPoolSize=1
BES.Memory.GlobalArea.MaximumHeapSize=20
BES.Memory.GlobalArea.Verbose=no
BES.Memory.GlobalArea.ControlHeap=no

#-----------------------------------------------------------------------#
# This key is set to either single or multiple mode.            	#
#                                                                       #
# In single mode the listener handles the client request itself, and    #
# only one client can connect at a time                                 #
#                                                                       #
# In multiple mode the listener listens for client connections. When a  #
# connection is made it forks another bes process to handle that client #
# connection and goes back to listening for more connections. More than #
# one client can connect at a time                                      #
#-----------------------------------------------------------------------#
BES.ProcessManagerMethod=multiple

#-----------------------------------------------------------------------#
# Is the client using the GET or POST method of making requests to a    #
# back-end server that is a built-in web server module. If the back-end #
# server is not a web server module, this key/value pair is not used    #
#-----------------------------------------------------------------------#
BES.DefaultResponseMethod=POST

#-----------------------------------------------------------------------#
#                                                                       #
# Data Handler Specific key/value parameters                            #
#                                                                       #
#-----------------------------------------------------------------------#
#-----------------------------------------------------------------------#
# SQL handler specific parameters
#-----------------------------------------------------------------------#

# ----------------------------------------------------------------------#
#       CheckPoint:
# ----------------------------------------------------------------------#
# There are 6 check points that you can activate:
# _SQLH_ON_CONNECT  =   1
# _SQLH_ON_CLOSE    =   2
# _SQLH_ON_QUERY    =   3
# _SQLH_ON_GET_NEXT =   4
# _SQLH_ON_NEXT_ROW =   5
# _SQLH_ON_CUSTOM   =   6
# Each check point correspond to a SQL phase in which handlers can perform
# Actions.
# Commons actions are (used by unixODBC): 
#  - print out debug info
#  - throw a Fatal error if connection status is bad
#  - throw a (recoverable) InternalError on get next object
# Others actions could be:
#  - mail me on error
#  - dump on file
#  - whatever you want
# Each registered SQLPlugin module can register and use its list
# of actions which will be activated or not depending on this option:
# SQL.CheckPoint=1,2,3,4

SQL.CheckPoint=1,2,3,4,5



